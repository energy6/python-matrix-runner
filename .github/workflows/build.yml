name: Build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    path:
      - '**/*.py'
jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install setup dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools twine wheel
      - name: Build distribution
        run: |
          python setup.py sdist bdist_wheel
          twine check dist/*
      - name: Upload distribution
        uses: actions/upload-artifact@v2
        with:
          path: dist/*

  lint:
    name: Run PyLint checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Run pylint
        run: |
          echo "::add-matcher::.github/pylint.json"
          pylint --exit-zero --rcfile=./pylintrc matrix_runner tests
  tests:
    name: Unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - uses: testspace-com/setup-testspace@v1      
        with:
          domain: energy6
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Run tests with coverage
        run: |
          coverage run --branch -m xmlrunner -o junit discover
          coverage xml --include="./matrix_runner/**"
      - name: Publish test results
        uses: mikepenz/action-junit-report@v2
        with:
          check_name: "JUnit Test Report [${{ matrix.os }}, ${{ matrix.python-version }}]"
          report_paths: junit/*.xml
        if: ${{ always() }}
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests,${{ matrix.os }},python-${{ matrix.python-version }}
          name: cov-${{ matrix.os }}-${{ matrix.python-version }}
          fail_ci_if_error: true
          verbose: true
        if: ${{ always() }}
      - name: Push result to Testspace server
        run: |
          testspace "[${{ matrix.os }}-${{ matrix.python-version }}]junit/*.xml"
          testspace "[${{ matrix.os }}-${{ matrix.python-version }}]coverage.xml"
        if: always()
